name: Deploy to AWS

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy-service.yml'
      - 'loan-tracker-service/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup secrets, run tests, build and push docker image
      - name: Create firebase-secret.json
        run: echo '${{ secrets.FIREBASE_SECRET }}' > $GITHUB_WORKSPACE/loan-tracker-service/firebase-secret.json

      - name: Grant execute permission for Gradlew
        run: chmod +x ./loan-tracker-service/gradlew

      - name: Run tests
        run: |
          cd loan-tracker-service
          ./gradlew test

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t zeeshan60/loan-tracker-service:latest -f loan-tracker-service/Dockerfile loan-tracker-service
          docker push zeeshan60/loan-tracker-service:latest

      # Deploy using AWS CodeDeploy
      - name: Check deploy directory
        run: |
          if [ ! -d "loan-tracker-service/deploy" ]; then
            echo "Deploy directory does not exist."
            exit 1
          fi

      - name: Package application
        run: |
          cd loan-tracker-service/deploy
          zip -r deploy.zip .

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::209479263325:role/github-role
          aws-region: ap-southeast-1

      - name: Upload to S3
        run: aws s3 cp $GITHUB_WORKSPACE/loan-tracker-service/deploy/deploy.zip s3://zflash-codedeploy-bucket/deploy.zip

      - name: Trigger AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name loan-tracker-service \
            --deployment-group-name loan-tracker-deployment-group \
            --s3-location bucket=zflash-codedeploy-bucket,key=deploy.zip,bundleType=zip
